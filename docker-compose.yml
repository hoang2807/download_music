services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: yt_downloader_mysql
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: yt_downloader
      MYSQL_USER: ytuser
      MYSQL_PASSWORD: ytpassword
    ports:
      - '3306:3306'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - yt_network
    healthcheck:
      test: ['CMD', 'mysqladmin', 'ping', '-h', 'localhost']
      timeout: 20s
      retries: 10
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: yt_downloader_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - yt_network
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      timeout: 10s
      retries: 5
    restart: unless-stopped

  # Flask Web Application
  web:
    build: .
    container_name: yt_downloader_web
    ports:
      - '5000:5000'
    environment:
      - DATABASE_URL=mysql+pymysql://ytuser:ytpassword@mysql:3306/yt_downloader
      - REDIS_URL=redis://redis:6379/0
      - ZING_PROXY_TOKEN=${ZING_PROXY_TOKEN}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - WASABI_ACCESS_KEY=${WASABI_ACCESS_KEY}
      - WASABI_SECRET_KEY=${WASABI_SECRET_KEY}
      - WASABI_BUCKET=${WASABI_BUCKET}
    volumes:
      - ./downloads:/tmp/yt-downloads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - yt_network
    restart: unless-stopped

  # RQ Worker for background jobs
  worker:
    build: .
    command: python worker.py
    environment:
      - DATABASE_URL=mysql+pymysql://ytuser:ytpassword@mysql:3306/yt_downloader
      - REDIS_URL=redis://redis:6379/0
      - ZING_PROXY_TOKEN=${ZING_PROXY_TOKEN}
      - SPOTIFY_CLIENT_ID=${SPOTIFY_CLIENT_ID}
      - SPOTIFY_CLIENT_SECRET=${SPOTIFY_CLIENT_SECRET}
      - WASABI_ACCESS_KEY=${WASABI_ACCESS_KEY}
      - WASABI_SECRET_KEY=${WASABI_SECRET_KEY}
      - WASABI_BUCKET=${WASABI_BUCKET}
    volumes:
      - ./downloads:/tmp/yt-downloads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - yt_network
    restart: unless-stopped

  # nginx for reverse proxy
  nginx:
    image: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - web
    networks:
      - yt_network

  # phpMyAdmin for managing MySQL
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: yt_downloader_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - '8080:80'
    networks:
      - yt_network
    depends_on:
      - mysql

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: yt_downloader_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email hungnm.dev94@gmail.com --agree-tos --no-eff-email -d scraper-1.merrychill.com
    depends_on:
      - nginx
    networks:
      - yt_network

volumes:
  mysql_data:
  redis_data:

networks:
  yt_network:
    driver: bridge
